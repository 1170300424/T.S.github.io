<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>密码学（4）</title>
    <link href="undefined2019/12/09/%E5%AF%86%E7%A0%81%E5%AD%A6%EF%BC%884%EF%BC%89/"/>
    <url>2019/12/09/%E5%AF%86%E7%A0%81%E5%AD%A6%EF%BC%884%EF%BC%89/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>密码学（3）</title>
    <link href="undefined2019/12/09/%E5%AF%86%E7%A0%81%E5%AD%A6%EF%BC%883%EF%BC%89/"/>
    <url>2019/12/09/%E5%AF%86%E7%A0%81%E5%AD%A6%EF%BC%883%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h2 id="第五章-伪随机置换（分组加密）的实际构建"><a href="#第五章-伪随机置换（分组加密）的实际构建" class="headerlink" title="第五章 伪随机置换（分组加密）的实际构建"></a>第五章 伪随机置换（分组加密）的实际构建</h2><h6 id="密码学第三次作业所需内容，密码学好难qaq，不想写作业。。。"><a href="#密码学第三次作业所需内容，密码学好难qaq，不想写作业。。。" class="headerlink" title="密码学第三次作业所需内容，密码学好难qaq，不想写作业。。。"></a>密码学第三次作业所需内容，密码学好难qaq，不想写作业。。。</h6><h3 id="5-1-代替——置换网络"><a href="#5-1-代替——置换网络" class="headerlink" title="5.1 代替——置换网络"></a>5.1 代替——置换网络</h3><p><strong>S盒</strong>（替换盒）：对称密钥加密算法执行替换计算的基本结构。在块密码中，通常被用于模糊密钥与密文之间的关系（香农的混淆理论）</p><h6 id="通常，S-Box接受特定数量的输入比特-m-，并将其转换为特定数量的输出比特-n-，其中-n-不一定等于-m-。一个-m-n-的S-Box可以通过包含-2-m-条目，每条目-n-比特的查找表实现。DES和AES的S盒是固定的，也有一些加密算法的S盒是基于密钥动态生成的，比如Blowfish和双鱼算法。"><a href="#通常，S-Box接受特定数量的输入比特-m-，并将其转换为特定数量的输出比特-n-，其中-n-不一定等于-m-。一个-m-n-的S-Box可以通过包含-2-m-条目，每条目-n-比特的查找表实现。DES和AES的S盒是固定的，也有一些加密算法的S盒是基于密钥动态生成的，比如Blowfish和双鱼算法。" class="headerlink" title="通常，S-Box接受特定数量的输入比特$m$，并将其转换为特定数量的输出比特$n$，其中$n$不一定等于$m$。一个$m*n$的S-Box可以通过包含$2^m$条目，每条目$n$比特的查找表实现。DES和AES的S盒是固定的，也有一些加密算法的S盒是基于密钥动态生成的，比如Blowfish和双鱼算法。"></a>通常，S-Box接受特定数量的输入比特$m$，并将其转换为特定数量的输出比特$n$，其中$n$不一定等于$m$。一个$m*n$的S-Box可以通过包含$2^m$条目，每条目$n$比特的查找表实现。DES和AES的S盒是固定的，也有一些加密算法的S盒是基于密钥动态生成的，比如Blowfish和双鱼算法。</h6><p><img src="%E5%AF%86%E7%A0%81%E5%AD%A6%EF%BC%883%EF%BC%89.assets/1571899988974.png" srcset="/img/loading.gif" alt="1**571899988974"></p><p><strong>P盒</strong>（置换盒）： 是一个透过置换和转置[替换盒（S-boxes）输入进行位元洗牌的方法，在转置的过程中保持一定程度的<a href="https://zh.wikipedia.org/wiki/混淆與擴散" target="_blank" rel="noopener">扩散</a>。 </p><p>置换盒通常分为三类：</p><ul><li>压缩性的——输出位元数比输入少</li><li>扩张性的——输出位元数比输入多</li><li>平直性的——输出位元数等于输入位元数</li></ul><p>其中只有平直性的置换盒是可逆的。</p><p><strong>代替置换网络（SP）</strong>：</p><p><img src="%E5%AF%86%E7%A0%81%E5%AD%A6%EF%BC%883%EF%BC%89.assets/1571901160997.png" srcset="/img/loading.gif" alt="1571901160997"></p><p><img src="%E5%AF%86%E7%A0%81%E5%AD%A6%EF%BC%883%EF%BC%89.assets/1571901172667.png" srcset="/img/loading.gif" alt="1571901172667"></p><p><strong>设计原则</strong>：</p><ul><li>S盒的可逆性：在代替置换网络中，S盒必须是可逆的（即必须是单射和满射函数），否则分组函数不能成为一个置换</li><li>雪崩效应：任何分组密码的一个重要特性就是输入的微小改变必然会导致输出的巨大改变，否则两个相似输入所生成的分组密码看起来就不是独立的了。因此，输入的单个比特的变化会影响每一个比特。<ul><li>S盒的设计要使得改变S盒输入的单个比特就能改变S盒输出的至少两个比特</li><li>混合置换的设计要使得任何给定的S盒的输出比特都被传递到下一轮中不同的S盒中</li></ul></li></ul><p><strong>代替置换网络的安全性</strong>：</p><p><strong>对轮数较少的代替转换网络的攻击</strong>：</p><p><strong>攻击三轮代替-置换网络</strong>：</p><h3 id="5-2-Feistel网络"><a href="#5-2-Feistel网络" class="headerlink" title="5.2 Feistel网络"></a>5.2 Feistel网络</h3><p><img src="%E5%AF%86%E7%A0%81%E5%AD%A6%EF%BC%883%EF%BC%89.assets/1571902725499.png" srcset="/img/loading.gif" alt="1571902725499"></p><p><img src="%E5%AF%86%E7%A0%81%E5%AD%A6%EF%BC%883%EF%BC%89.assets/1571902747488.png" srcset="/img/loading.gif" alt="1571902747488"></p><h3 id="5-3-DES——数据加密标准"><a href="#5-3-DES——数据加密标准" class="headerlink" title="5.3 DES——数据加密标准"></a>5.3 DES——数据加密标准</h3><h3 id="5-4-增加分组密码的密钥长度"><a href="#5-4-增加分组密码的密钥长度" class="headerlink" title="5.4 增加分组密码的密钥长度"></a>5.4 增加分组密码的密钥长度</h3><h3 id="5-5-AES——高级加密标准"><a href="#5-5-AES——高级加密标准" class="headerlink" title="5.5 AES——高级加密标准"></a>5.5 AES——高级加密标准</h3><h3 id="5-6-差分密码盒线性密码分析简介"><a href="#5-6-差分密码盒线性密码分析简介" class="headerlink" title="5.6 差分密码盒线性密码分析简介"></a>5.6 差分密码盒线性密码分析简介</h3><h2 id="第六章-伪随机对象的理论构造"><a href="#第六章-伪随机对象的理论构造" class="headerlink" title="第六章 伪随机对象的理论构造"></a>第六章 伪随机对象的理论构造</h2><h3 id="6-1-单向函数"><a href="#6-1-单向函数" class="headerlink" title="6.1 单向函数"></a>6.1 单向函数</h3><h5 id="单向函数的定义："><a href="#单向函数的定义：" class="headerlink" title="单向函数的定义："></a>单向函数的定义：</h5><ul><li>令$f:{0,1}^<em>\rightarrow{0,1}^</em>$为一个函数，$A$为任意算法，$n$为任意安全参数值：<ul><li>求逆实验$Invert_{A.f}(n)$<ul><li>选择输入$x\leftarrow{0,1}^n$，计算$y:=f(x)$</li><li>$1^n$和$y$值作为$A$的输入，输出为$x’$</li><li>如果$f(x’)=y$，那么定义该实验输出为1，否则为0</li></ul></li></ul></li><li><strong>定义</strong>：如果一个函数$f:{0,1}^<em>\rightarrow{0,1}^</em>$满足以下两个条件，那么它是单向函数：<ul><li>（易于计算）存在多项式时间算法$M_f$来计算$f$,即对于所有的$x$，有$M_f(x)$</li><li>（反向求逆十分困难）对任意概率多项式时间算法$A$，存在一个可忽略函数$negl$，满足：$Pr[Invert_{A,f}(n)=1]\leqslant negl(n)$<ul><li>也可表示为：$Pr_{x\leftarrow{0,1}^n}[A(f(x))∈f^{-1}(f(x))] \leqslant negl(n) $</li></ul></li></ul></li></ul><h5 id="单向置换："><a href="#单向置换：" class="headerlink" title="单向置换："></a>单向置换：</h5>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>密码学（2）</title>
    <link href="undefined2019/12/09/%E5%AF%86%E7%A0%81%E5%AD%A6%EF%BC%882%EF%BC%89/"/>
    <url>2019/12/09/%E5%AF%86%E7%A0%81%E5%AD%A6%EF%BC%882%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h2 id="第三章-对称密钥加密及为随机性"><a href="#第三章-对称密钥加密及为随机性" class="headerlink" title="第三章 对称密钥加密及为随机性"></a>第三章 对称密钥加密及为随机性</h2><h3 id="3-1密码学的计算方法"><a href="#3-1密码学的计算方法" class="headerlink" title="3.1密码学的计算方法"></a>3.1密码学的计算方法</h3><h4 id="信息理论安全与计算安全"><a href="#信息理论安全与计算安全" class="headerlink" title="信息理论安全与计算安全"></a>信息理论安全与计算安全</h4><ul><li>信息理论安全：完善保密加密</li><li>计算安全：使用具体方法和渐进方法来定义：<ul><li>具体方法：如果每个运行时间最多为$t$的敌手以最多为$\varepsilon$的概率成功公婆该方案，则称这个方案为$(t,\varepsilon)$安全</li><li>渐进方法：如果每个PPT（多项式时间）敌手以可忽略的概率成功攻破一个方案，那么该方案是安全的<ul><li>注：在任何加密方案中，密钥空间必须足够大，以至于敌手不能变量，或者说，密钥空间的时间规模必须为安全参数的超多项式</li></ul></li></ul></li></ul><h4 id="有效的算法与可忽略的成功概率"><a href="#有效的算法与可忽略的成功概率" class="headerlink" title="有效的算法与可忽略的成功概率"></a>有效的算法与可忽略的成功概率</h4><ul><li><strong>有效计算</strong>：指能够在“概率多项式时间”（PPT）内执行的计算</li><li><strong>可忽略的成功概率</strong>：如果对于每一个多项式$p(.)$，存在一个$N$，使得所有的整数$n&gt;N$，都满足$f(n)&lt;1/p(n)$，则函数$f$是可忽略的</li></ul><h4 id="如何证明某个密码构造是安全的"><a href="#如何证明某个密码构造是安全的" class="headerlink" title="如何证明某个密码构造是安全的"></a>如何证明某个密码构造是安全的</h4><ol><li>指定PPT敌手$A$攻击，并将成功的概率表示为$\varepsilon(n)$</li><li>构造一个叫做”规约“的有效算法$A~’$（区分器？）,该算法将敌手$A$作为子程序来使用，试图解决难题$X$。<img src="%E5%AF%86%E7%A0%81%E5%AD%A6%EF%BC%882%EF%BC%89.assets/1571837250776.png" srcset="/img/loading.gif" alt="1571837250776"></li><li>如果能成功攻破，那么说明该区分器可以区分这个加密算法所使用的伪随机生成器</li><li>但是根据伪随机生成器的定义，不可被区分</li><li>所以矛盾，证明该算法安全</li></ol><h3 id="3-2-定义计算安全的加密"><a href="#3-2-定义计算安全的加密" class="headerlink" title="3.2 定义计算安全的加密"></a>3.2 定义计算安全的加密</h3><h4 id="窃听者存在情况下的不可区分性"><a href="#窃听者存在情况下的不可区分性" class="headerlink" title="窃听者存在情况下的不可区分性"></a>窃听者存在情况下的不可区分性</h4><p>​    窃听者不可区分实验$PrivK^{eav}_{A,\Pi}(n)$:</p><ul><li>给定输入$1^n$给敌手$A$，$A$输出一对长度相等的消息$m_0$,$m_1$。</li><li>运行$Gen(1^n)$生成以个密钥k，选择一个随机比特$b$，$b∈{0,1}$。计算出密文$c=Enc_k(m_b)$，并且给$A$。把$c$叫做挑战密文。</li><li>$A$输出一个比特$b’$</li><li>如果$b=b’$输出1，反之输出0.</li></ul><h5 id="定义：如果对于所有的概率多项式事件敌手-A-存在一个可忽略函数-negl-使得：-Pr-PrivK-eav-A-Pi-lt-1-2-negl-n-则一个对称密钥加密方案-Pi-Gen-Enc-Dec-具备在窃听者存在的情况下不可区分的加密。"><a href="#定义：如果对于所有的概率多项式事件敌手-A-存在一个可忽略函数-negl-使得：-Pr-PrivK-eav-A-Pi-lt-1-2-negl-n-则一个对称密钥加密方案-Pi-Gen-Enc-Dec-具备在窃听者存在的情况下不可区分的加密。" class="headerlink" title="定义：如果对于所有的概率多项式事件敌手$A$,存在一个可忽略函数$negl$使得：$Pr[PrivK^{eav}_{A,\Pi}&lt;= 1/2 +negl(n)$,则一个对称密钥加密方案$\Pi=(Gen,Enc,Dec)$具备在窃听者存在的情况下不可区分的加密。"></a>定义：如果对于所有的概率多项式事件敌手$A$,存在一个可忽略函数$negl$使得：$Pr[PrivK^{eav}_{A,\Pi}&lt;= 1/2 +negl(n)$,则一个对称密钥加密方案$\Pi=(Gen,Enc,Dec)$具备在窃听者存在的情况下不可区分的加密。</h5><h5 id="等价公式：-Pr-output-PrivK-eav-A-Pi-n-0-1-Pr-output-PrivK-eav-A-Pi-n-1-1-lt-negl-n"><a href="#等价公式：-Pr-output-PrivK-eav-A-Pi-n-0-1-Pr-output-PrivK-eav-A-Pi-n-1-1-lt-negl-n" class="headerlink" title="等价公式：$|Pr[output(PrivK^{eav}{A,\Pi}(n,0))=1]-Pr[output(PrivK^{eav}{A,\Pi}(n,1))=1]| &lt;= negl(n)$"></a>等价公式：$|Pr[output(PrivK^{eav}<em>{A,\Pi}(n,0))=1]-Pr[output(PrivK^{eav}</em>{A,\Pi}(n,1))=1]| &lt;= negl(n)$</h5>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>密码学（1）</title>
    <link href="undefined2019/12/09/%E5%AF%86%E7%A0%81%E5%AD%A6%EF%BC%881%EF%BC%89/"/>
    <url>2019/12/09/%E5%AF%86%E7%A0%81%E5%AD%A6%EF%BC%881%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h1 id="第一章-概论"><a href="#第一章-概论" class="headerlink" title="第一章 概论"></a>第一章 概论</h1><h2 id="1-2-对称密钥加密"><a href="#1-2-对称密钥加密" class="headerlink" title="1.2 对称密钥加密"></a>1.2 对称密钥加密</h2><p>对称密钥（秘密密钥）：双方共享密码信息（密钥）</p><ul><li>消息本身称为明文</li><li>加密后的消息称为密文</li></ul><p>对称密钥加密方案包含的三个算法：密钥产生、加密、解密</p><ul><li><strong>密钥产生算法（Gen）</strong>：概率算法，根据方案定义的某种分布选择并输出一个密钥<em>k</em></li><li><strong>加密算法（Enc）</strong>：输入密钥<em>k</em>和明文<em>m</em>，输出密文<em>c</em>。记为$Enc_k(m)$</li><li><strong>解密算法（Dec）</strong>：输入密钥<em>k</em>和密文<em>c</em>，输出明文<em>m</em>。记为$Dec_k(c)$</li><li><strong>密钥空间（<em>K</em>）</strong>：密钥产生函数输出的所有可能密钥称为密钥空间</li><li><strong>明文（消息）空间（<em>M</em>）</strong>：所有被加密算法支持的消息的集合</li><li>一个加密方案可由明确三个算法（Gen，Enc，Dec）和明文空间<em>M</em>来完全定义</li></ul><p><strong>攻击场景</strong></p><ul><li><p><strong>唯密文攻击</strong>：仅已知密文</p></li><li><p><strong>已知明文攻击</strong>：已知一个或多个使用相同密钥加密的明文/密文对</p></li><li><p><strong>选择明文攻击</strong>：可以选择明文得到其对应密文</p></li><li><p><strong>选择密文攻击</strong>：可以选择密文得到其对应明文</p></li></ul><h2 id="1-3-古典加密术及其密码分析"><a href="#1-3-古典加密术及其密码分析" class="headerlink" title="1.3 古典加密术及其密码分析"></a>1.3 古典加密术及其密码分析</h2><p><strong>凯撒加密</strong>：移位3字母</p><p><strong>移位加密</strong>:密钥<em>k</em>∈(0,25)，加密时字母移动<em>k</em>个位置</p><p><em>密钥空间充分性原则：任何安全的加密方案必须拥有一个能够抵御穷举搜索的密钥空间</em></p><p><strong>单字母替换（substitution）</strong>：一一映射</p><p><strong>多字母移位加密（Vigenere）</strong>：如图</p><p><img src="%E5%AF%86%E7%A0%81%E5%AD%A6%EF%BC%881%EF%BC%89.assets/QQ%E6%88%AA%E5%9B%BE20191021142622.png" srcset="/img/loading.gif" alt="QQ截图20191021142622"></p><h1 id="第二章-完善保密加密"><a href="#第二章-完善保密加密" class="headerlink" title="第二章 完善保密加密"></a>第二章 完善保密加密</h1><h2 id="2-1-完善保密加密"><a href="#2-1-完善保密加密" class="headerlink" title="2.1 完善保密加密"></a>2.1 完善保密加密</h2><p><strong>完善保密加密：</strong></p><p><img src="file:///C:/%5CUsers%5Cx%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1571299722142.png" srcset="/img/loading.gif" alt="1571299722142"></p><p><img src="file:///C:/%5CUsers%5Cx%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1571300022534.png" srcset="/img/loading.gif" alt="1571300022534"></p><p><strong>完美不可区分性：</strong>密文不包含任何明文信息（密文空间的概率分布独立于明文？）</p><p><img src="file:///C:/%5CUsers%5Cx%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1571300059672.png" srcset="/img/loading.gif" alt="1571300059672"></p><p><strong>敌手不可区分性：</strong>敌手不能区分密文时来自哪个明文的加密</p><p><img src="file:///C:/%5CUsers%5Cx%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1571300128559.png" srcset="/img/loading.gif" alt="1571300128559"></p><p>其中：<img src="file:///C:/%5CUsers%5Cx%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1571300164844.png" srcset="/img/loading.gif" alt="1571300164844"></p><h2 id="2-2-一次一密（Vernam加密）"><a href="#2-2-一次一密（Vernam加密）" class="headerlink" title="2.2 一次一密（Vernam加密）"></a>2.2 一次一密（Vernam加密）</h2><p><img src="file:///C:/%5CUsers%5Cx%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1571300541390.png" srcset="/img/loading.gif" alt="1571300541390"></p><h2 id="2-3-完善保密加密局限"><a href="#2-3-完善保密加密局限" class="headerlink" title="2.3 完善保密加密局限"></a>2.3 完善保密加密局限</h2><p><img src="file:///C:/%5CUsers%5Cx%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1571578028672.png" srcset="/img/loading.gif" alt="1571578028672"></p><h2 id="2-4-香农定理"><a href="#2-4-香农定理" class="headerlink" title="2.4 香农定理"></a>2.4 香农定理</h2><p> 定理：设加密方案 （Gen,Enc,Dec）的明文空间为<em>M</em>，且|<em>K</em>|=|<em>M</em>|=|<em>C</em>|，则当且仅当下列条件成立时，此方案是完善保密加密：</p><ul><li>由Gen产生的任意密钥<em>k</em>∈<em>K</em>的概率都是1/|<em>K</em>|。</li><li>对任意明文<em>m</em>∈<em>M</em>和任意密文<em>c</em>∈<em>C</em>，只存在唯一的密钥<em>k</em>∈<em>K</em>使得$Enc_k(m)$输出<em>c</em>。</li></ul><script type="math/tex; mode=display">a+b=c</script>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>计算机网络1</title>
    <link href="undefined2019/12/09/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C1/"/>
    <url>2019/12/09/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C1/</url>
    
    <content type="html"><![CDATA[<h1 id="计算机网络-1"><a href="#计算机网络-1" class="headerlink" title="计算机网络 1"></a>计算机网络 1</h1><h2 id="第一章-计算机网络和因特网"><a href="#第一章-计算机网络和因特网" class="headerlink" title="第一章 计算机网络和因特网"></a>第一章 计算机网络和因特网</h2><p><strong>计算机网络的定义：</strong>计算机网络是<strong>互联</strong>的，<strong>自治</strong>的计算机集合</p><ul><li>自治：无主从关系</li><li>互联：互联互通</li><li>计算机网络是一种<strong>通信网络</strong></li></ul><p>主机通过<strong>交换网络</strong>互连</p><p><strong>ISP</strong>：因特网服务提供商</p><p><strong>网络协议（协议）</strong>：是为了进行网络中数据交换而建立的规则、标准或约定。它规定了通信实体之间所交换的消息的<strong>格式</strong>、<strong>意义</strong>、<strong>顺序</strong>以及针对收到信息或发生的事件所采取的动作。</p><ul><li>三要素：<ul><li>语法：<em>数据与控制信息的结构或格式；信号电平。</em></li><li>语义：<em>要放发出何种控制信息、完成何种动作、做出何种响应；差错控制。</em></li><li>时序：<em>事件顺序；速度匹配。</em></li></ul></li><li>协议规范了网络中所有信息的发送和接收过程</li></ul><p><strong>计算机网络结构</strong>：</p><ul><li>网络边缘<ul><li>主机（端系统）</li><li>客户/服务器（C/S）应用模型</li><li>对等（P2P）应用模型<ul><li><em>在对等者之间分配任务和工作负载的分布式应用架构</em></li><li><em>网络的参与者共享他们所拥有的一部分硬件资源、这些资源通过网络提供服务和内容，可被其他节点直接访问二无需经过中间实体。</em></li><li><em>既是Server，也是Client。</em></li></ul></li></ul></li><li><h2 id="接入网络，物理介质"><a href="#接入网络，物理介质" class="headerlink" title="接入网络，物理介质:"></a>接入网络，物理介质:</h2></li><li>网络核心（核心网络）</li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>天水</title>
    <link href="undefined2019/12/09/hello-world/"/>
    <url>2019/12/09/hello-world/</url>
    
    <content type="html"><![CDATA[<h5 id="b站：鸡汁的天水菌w"><a href="#b站：鸡汁的天水菌w" class="headerlink" title="b站：鸡汁的天水菌w"></a>b站：鸡汁的天水菌w</h5><h5 id="知乎：醉后不知天在水"><a href="#知乎：醉后不知天在水" class="headerlink" title="知乎：醉后不知天在水"></a>知乎：醉后不知天在水</h5><h5 id="全民K歌：天水君w"><a href="#全民K歌：天水君w" class="headerlink" title="全民K歌：天水君w"></a>全民K歌：天水君w</h5><h3 id="我也不知道我在干什么qaq"><a href="#我也不知道我在干什么qaq" class="headerlink" title="我也不知道我在干什么qaq"></a>我也不知道我在干什么qaq</h3><h2 id="！大概是瞎试吧"><a href="#！大概是瞎试吧" class="headerlink" title="！大概是瞎试吧"></a>！大概是瞎试吧</h2><h6 id="所以说"><a href="#所以说" class="headerlink" title="所以说"></a>所以说</h6><h2 id="昨天买的花花真好看啊啊啊啊"><a href="#昨天买的花花真好看啊啊啊啊" class="headerlink" title="昨天买的花花真好看啊啊啊啊"></a>昨天买的花花真好看啊啊啊啊</h2><h6 id="什么鬼233333"><a href="#什么鬼233333" class="headerlink" title="什么鬼233333"></a>什么鬼233333</h6><h1 id="ctrl-1"><a href="#ctrl-1" class="headerlink" title="ctrl+1"></a>ctrl+1</h1><h2 id="ctrl-2"><a href="#ctrl-2" class="headerlink" title="ctrl+2"></a>ctrl+2</h2><h3 id="ctrl-3"><a href="#ctrl-3" class="headerlink" title="ctrl+3"></a>ctrl+3</h3><h4 id="ctrl-4"><a href="#ctrl-4" class="headerlink" title="ctrl+4"></a>ctrl+4</h4><h5 id="ctrl-5"><a href="#ctrl-5" class="headerlink" title="ctrl+5"></a>ctrl+5</h5><h6 id="ctrl-6"><a href="#ctrl-6" class="headerlink" title="ctrl+6"></a>ctrl+6</h6><ul><li>-和空格</li></ul><blockquote><p>引用是&gt; 加空格</p></blockquote><center>居中了吗？？？</center><p>真的居中了欸！！！</p><p>斜体：<em>成功了吗！是在两边打星号来着</em></p><p>加粗：<strong>在两边打两个星号23333太秀了</strong></p><p><u>下划线是u标签</u></p><p><u>还可以ctrl+u</u></p><ul><li>[ ]</li><li>[x]</li></ul><table><thead><tr><th>ctrl+t 是表格</th><th></th><th></th></tr></thead><tbody><tr><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr></tbody></table><p><a href="http://www.baidu.com" target="_blank" rel="noopener">喵喵喵</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>